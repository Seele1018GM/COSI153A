{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar AlarmClock = function AlarmClock() {\n  var _useState = useState(new Date()),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedTime = _useState2[0],\n    setSelectedTime = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    showTimePicker = _useState4[0],\n    setShowTimePicker = _useState4[1];\n  var handleTimeChange = function handleTimeChange(event, time) {\n    if (time) {\n      setSelectedTime(time);\n      setShowTimePicker(false);\n      scheduleNotification();\n    }\n  };\n  var scheduleNotification = function scheduleNotification() {\n    console.log('Notification scheduled');\n  };\n  var showPicker = function showPicker() {\n    setShowTimePicker(true);\n  };\n  return _jsxs(View, {\n    children: [_jsx(Button, {\n      title: \"Set Alarm\",\n      onPress: showPicker\n    }), showTimePicker && _jsx(DateTimePicker, {\n      value: selectedTime,\n      mode: \"time\",\n      display: Platform.OS === 'ios' ? 'spinner' : 'default',\n      onChange: handleTimeChange\n    })]\n  });\n};\nexport default AlarmClock;","map":{"version":3,"names":["React","useState","View","Button","Platform","DateTimePicker","jsx","_jsx","jsxs","_jsxs","AlarmClock","_useState","Date","_useState2","_slicedToArray","selectedTime","setSelectedTime","_useState3","_useState4","showTimePicker","setShowTimePicker","handleTimeChange","event","time","scheduleNotification","console","log","showPicker","children","title","onPress","value","mode","display","OS","onChange"],"sources":["/Users/zhangxinyi/Desktop/My Home/code/MyProject/components/AlarmClock.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Button, Platform } from 'react-native';\nimport DateTimePicker from '@react-native-community/datetimepicker';\n\nconst AlarmClock = () => {\n  const [selectedTime, setSelectedTime] = useState(new Date());\n  const [showTimePicker, setShowTimePicker] = useState(false);\n\n  const handleTimeChange = (event, time) => {\n    if (time) {\n      setSelectedTime(time);\n      setShowTimePicker(false);\n      scheduleNotification();\n    }\n  };\n\n  const scheduleNotification = () => {\n    // Implement the logic to schedule the notification at the selected time\n    // You can use a notification library or implement the logic based on your requirements\n    // For example, you can use the react-native-push-notification library\n    // Remember to install and configure the library according to its documentation\n    console.log('Notification scheduled');\n  };\n\n  const showPicker = () => {\n    setShowTimePicker(true);\n  };\n\n  return (\n    <View>\n      <Button title=\"Set Alarm\" onPress={showPicker} />\n      {showTimePicker && (\n        <DateTimePicker\n          value={selectedTime}\n          mode=\"time\"\n          display={Platform.OS === 'ios' ? 'spinner' : 'default'}\n          onChange={handleTimeChange}\n        />\n      )}\n    </View>\n  );\n};\n\nexport default AlarmClock;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,QAAA;AAExC,OAAOC,cAAc,MAAM,wCAAwC;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEpE,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAS;EACvB,IAAAC,SAAA,GAAwCV,QAAQ,CAAC,IAAIW,IAAI,CAAC,CAAC,CAAC;IAAAC,UAAA,GAAAC,cAAA,CAAAH,SAAA;IAArDI,YAAY,GAAAF,UAAA;IAAEG,eAAe,GAAAH,UAAA;EACpC,IAAAI,UAAA,GAA4ChB,QAAQ,CAAC,KAAK,CAAC;IAAAiB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAApDE,cAAc,GAAAD,UAAA;IAAEE,iBAAiB,GAAAF,UAAA;EAExC,IAAMG,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIC,KAAK,EAAEC,IAAI,EAAK;IACxC,IAAIA,IAAI,EAAE;MACRP,eAAe,CAACO,IAAI,CAAC;MACrBH,iBAAiB,CAAC,KAAK,CAAC;MACxBI,oBAAoB,CAAC,CAAC;IACxB;EACF,CAAC;EAED,IAAMA,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAA,EAAS;IAKjCC,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;EACvC,CAAC;EAED,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAS;IACvBP,iBAAiB,CAAC,IAAI,CAAC;EACzB,CAAC;EAED,OACEX,KAAA,CAACP,IAAI;IAAA0B,QAAA,GACHrB,IAAA,CAACJ,MAAM;MAAC0B,KAAK,EAAC,WAAW;MAACC,OAAO,EAAEH;IAAW,CAAE,CAAC,EAChDR,cAAc,IACbZ,IAAA,CAACF,cAAc;MACb0B,KAAK,EAAEhB,YAAa;MACpBiB,IAAI,EAAC,MAAM;MACXC,OAAO,EAAE7B,QAAQ,CAAC8B,EAAE,KAAK,KAAK,GAAG,SAAS,GAAG,SAAU;MACvDC,QAAQ,EAAEd;IAAiB,CAC5B,CACF;EAAA,CACG,CAAC;AAEX,CAAC;AAED,eAAeX,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}