{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar GuessNumber = function GuessNumber() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    guess = _useState2[0],\n    setGuess = _useState2[1];\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    attempts = _useState4[0],\n    setAttempts = _useState4[1];\n  var _useState5 = useState(Math.floor(Math.random() * 100) + 1),\n    _useState6 = _slicedToArray(_useState5, 1),\n    answer = _useState6[0];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    message = _useState8[0],\n    setMessage = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    gameOver = _useState10[0],\n    setGameOver = _useState10[1];\n  useEffect(function () {\n    if (attempts === 7) {\n      setMessage(\"Game over! The number was \" + answer + \".\");\n      setGameOver(true);\n    }\n  }, [attempts]);\n  var handleGuess = function handleGuess() {\n    var parsedGuess = parseInt(guess);\n    if (isNaN(parsedGuess) || parsedGuess < 1 || parsedGuess > 100) {\n      setMessage('Invalid guess. Please enter a number between 1 and 100.');\n      return;\n    }\n    setAttempts(attempts + 1);\n    if (parsedGuess === answer) {\n      setMessage(\"Congratulations! You guessed the number in \" + attempts + \" attempts.\");\n      setGameOver(true);\n      return;\n    }\n    if (parsedGuess < answer) {\n      setMessage('Too small. Try guessing a larger number.');\n    } else {\n      setMessage('Too large. Try guessing a smaller number.');\n    }\n    setGuess('');\n  };\n  var restartGame = function restartGame() {\n    setGuess('');\n    setAttempts(0);\n    setMessage('');\n    setGameOver(false);\n    setAnswer(Math.floor(Math.random() * 100) + 1);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Guess the Number\"\n    }), gameOver ? _jsxs(View, {\n      children: [_jsx(Text, {\n        style: styles.message,\n        children: message\n      }), _jsx(Button, {\n        title: \"Restart\",\n        onPress: restartGame\n      })]\n    }) : _jsxs(View, {\n      children: [_jsx(Text, {\n        style: styles.message,\n        children: message\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Enter a number between 1 and 100\",\n        value: guess,\n        onChangeText: setGuess,\n        keyboardType: \"numeric\",\n        editable: !gameOver\n      }), _jsx(Button, {\n        title: \"Guess\",\n        onPress: handleGuess,\n        disabled: gameOver\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20\n  },\n  input: {\n    width: '80%',\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: 20,\n    paddingHorizontal: 10\n  },\n  message: {\n    fontSize: 16,\n    marginBottom: 20\n  }\n});\nexport default GuessNumber;","map":{"version":3,"names":["React","useState","useEffect","StyleSheet","View","Text","TextInput","Button","jsx","_jsx","jsxs","_jsxs","GuessNumber","_useState","_useState2","_slicedToArray","guess","setGuess","_useState3","_useState4","attempts","setAttempts","_useState5","Math","floor","random","_useState6","answer","_useState7","_useState8","message","setMessage","_useState9","_useState10","gameOver","setGameOver","handleGuess","parsedGuess","parseInt","isNaN","restartGame","setAnswer","style","styles","container","children","title","onPress","input","placeholder","value","onChangeText","keyboardType","editable","disabled","create","flex","alignItems","justifyContent","padding","fontSize","fontWeight","marginBottom","width","height","borderColor","borderWidth","paddingHorizontal"],"sources":["/Users/zhangxinyi/Desktop/My Home/code/MyProject/components/GuessNumber.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { StyleSheet, View, Text, TextInput, Button } from 'react-native';\n\nconst GuessNumber = () => {\n  const [guess, setGuess] = useState('');\n  const [attempts, setAttempts] = useState(0);\n  const [answer] = useState(Math.floor(Math.random() * 100) + 1);\n  const [message, setMessage] = useState('');\n  const [gameOver, setGameOver] = useState(false);\n\n  useEffect(() => {\n    if (attempts === 7) {\n      setMessage(`Game over! The number was ${answer}.`);\n      setGameOver(true);\n    }\n  }, [attempts]);\n\n  const handleGuess = () => {\n    const parsedGuess = parseInt(guess);\n    if (isNaN(parsedGuess) || parsedGuess < 1 || parsedGuess > 100) {\n      setMessage('Invalid guess. Please enter a number between 1 and 100.');\n      return;\n    }\n\n    setAttempts(attempts + 1);\n\n    if (parsedGuess === answer) {\n      setMessage(`Congratulations! You guessed the number in ${attempts} attempts.`);\n      setGameOver(true);\n      return;\n    }\n\n    if (parsedGuess < answer) {\n      setMessage('Too small. Try guessing a larger number.');\n    } else {\n      setMessage('Too large. Try guessing a smaller number.');\n    }\n    setGuess('');\n  };\n\n  const restartGame = () => {\n    setGuess('');\n    setAttempts(0);\n    setMessage('');\n    setGameOver(false);\n    setAnswer(Math.floor(Math.random() * 100) + 1);\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Guess the Number</Text>\n      {gameOver ? (\n        <View>\n          <Text style={styles.message}>{message}</Text>\n          <Button title=\"Restart\" onPress={restartGame} />\n        </View>\n      ) : (\n        <View>\n          <Text style={styles.message}>{message}</Text>\n          <TextInput\n            style={styles.input}\n            placeholder=\"Enter a number between 1 and 100\"\n            value={guess}\n            onChangeText={setGuess}\n            keyboardType=\"numeric\"\n            editable={!gameOver}\n          />\n          <Button title=\"Guess\" onPress={handleGuess} disabled={gameOver} />\n        </View>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20,\n  },\n  input: {\n    width: '80%',\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: 20,\n    paddingHorizontal: 10,\n  },\n  message: {\n    fontSize: 16,\n    marginBottom: 20,\n  },\n});\n\nexport default GuessNumber;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}