{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Vibration from \"react-native-web/dist/exports/Vibration\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar GuessNumber = function GuessNumber() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    guess = _useState2[0],\n    setGuess = _useState2[1];\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    attempts = _useState4[0],\n    setAttempts = _useState4[1];\n  var _useState5 = useState(Math.floor(Math.random() * 100) + 1),\n    _useState6 = _slicedToArray(_useState5, 2),\n    answer = _useState6[0],\n    setAnswer = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    message = _useState8[0],\n    setMessage = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    gameOver = _useState10[0],\n    setGameOver = _useState10[1];\n  useEffect(function () {\n    if (attempts === 7) {\n      setMessage(\"Game over! The number was \" + answer + \".\");\n      setGameOver(true);\n      Vibration.vibrate(500);\n    }\n  }, [attempts]);\n  var handleGuess = function handleGuess() {\n    var parsedGuess = parseInt(guess);\n    if (isNaN(parsedGuess) || parsedGuess < 1 || parsedGuess > 100) {\n      setMessage('Invalid guess. Please enter a number between 1 and 100.');\n      return;\n    }\n    setAttempts(attempts + 1);\n    if (parsedGuess === answer) {\n      setMessage(\"Congratulations! You guessed the number in \" + attempts + \" attempts.\");\n      setGameOver(true);\n      Vibration.vibrate(1000);\n      return;\n    }\n    if (parsedGuess < answer) {\n      setMessage('Too small. Try guessing a larger number.');\n    } else {\n      setMessage('Too large. Try guessing a smaller number.');\n    }\n    setGuess('');\n  };\n  var restartGame = function restartGame() {\n    setGuess('');\n    setAttempts(0);\n    setMessage('');\n    setGameOver(false);\n    setAnswer(Math.floor(Math.random() * 100) + 1);\n  };\n  var textSize = gameOver ? 20 : 16;\n  var inputStyle = [styles.input, {\n    fontSize: textSize\n  }];\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Guess the Number\"\n    }), gameOver ? _jsxs(View, {\n      children: [_jsx(Text, {\n        style: styles.message,\n        children: message\n      }), guess === answer.toString() ? _jsx(Text, {\n        style: styles.result,\n        children: \"You Guessed It!\"\n      }) : _jsx(Text, {\n        style: styles.result,\n        children: \"You Lost!\"\n      }), _jsx(Button, {\n        title: \"Restart\",\n        onPress: restartGame\n      })]\n    }) : _jsxs(View, {\n      children: [_jsx(Text, {\n        style: styles.message,\n        children: message\n      }), _jsx(Text, {\n        style: styles.remainingGuesses,\n        children: \"Remaining Guesses: \" + (7 - attempts)\n      }), _jsx(TextInput, {\n        style: inputStyle,\n        placeholder: \"Enter a number between 1 and 100\",\n        value: guess,\n        onChangeText: setGuess,\n        keyboardType: \"numeric\",\n        editable: !gameOver\n      }), _jsx(Button, {\n        title: \"Guess\",\n        onPress: handleGuess,\n        disabled: gameOver\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20\n  },\n  input: {\n    width: '100%',\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: 20,\n    paddingHorizontal: 10\n  },\n  message: {\n    fontSize: 16,\n    marginBottom: 20\n  },\n  remainingGuesses: {\n    fontSize: 16,\n    marginBottom: 10\n  },\n  result: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 20\n  }\n});\nexport default GuessNumber;","map":{"version":3,"names":["React","useState","useEffect","StyleSheet","View","Text","TextInput","Button","Vibration","jsx","_jsx","jsxs","_jsxs","GuessNumber","_useState","_useState2","_slicedToArray","guess","setGuess","_useState3","_useState4","attempts","setAttempts","_useState5","Math","floor","random","_useState6","answer","setAnswer","_useState7","_useState8","message","setMessage","_useState9","_useState10","gameOver","setGameOver","vibrate","handleGuess","parsedGuess","parseInt","isNaN","restartGame","textSize","inputStyle","styles","input","fontSize","style","container","children","title","toString","result","onPress","remainingGuesses","placeholder","value","onChangeText","keyboardType","editable","disabled","create","flex","alignItems","justifyContent","padding","fontWeight","marginBottom","width","height","borderColor","borderWidth","paddingHorizontal"],"sources":["/Users/zhangxinyi/Desktop/My Home/code/MyProject/components/GuessNumber.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { StyleSheet, View, Text, TextInput, Button, Vibration } from 'react-native';\n\nconst GuessNumber = () => {\n  const [guess, setGuess] = useState('');\n  const [attempts, setAttempts] = useState(0);\n  const [answer, setAnswer] = useState(Math.floor(Math.random() * 100) + 1);\n  const [message, setMessage] = useState('');\n  const [gameOver, setGameOver] = useState(false);\n\n  useEffect(() => {\n    if (attempts === 7) {\n      setMessage(`Game over! The number was ${answer}.`);\n      setGameOver(true);\n      Vibration.vibrate(500)\n    }\n  }, [attempts]);\n\n  const handleGuess = () => {\n    const parsedGuess = parseInt(guess);\n    if (isNaN(parsedGuess) || parsedGuess < 1 || parsedGuess > 100) {\n      setMessage('Invalid guess. Please enter a number between 1 and 100.');\n      return;\n    }\n\n    setAttempts(attempts + 1);\n\n    if (parsedGuess === answer) {\n      setMessage(`Congratulations! You guessed the number in ${attempts} attempts.`);\n      setGameOver(true);\n      Vibration.vibrate(1000)\n      return;\n    }\n\n    if (parsedGuess < answer) {\n      setMessage('Too small. Try guessing a larger number.');\n    } else {\n      setMessage('Too large. Try guessing a smaller number.');\n    }\n    setGuess('');\n  };\n\n  const restartGame = () => {\n    setGuess('');\n    setAttempts(0);\n    setMessage('');\n    setGameOver(false);\n    setAnswer(Math.floor(Math.random() * 100) + 1);\n  };\n\n  const textSize = gameOver ? 20 : 16;\n  const inputStyle = [styles.input, { fontSize: textSize }];\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Guess the Number</Text>\n      {gameOver ? (\n        <View>\n          <Text style={styles.message}>{message}</Text>\n          {guess === answer.toString() ? (\n            <Text style={styles.result}>You Guessed It!</Text>\n          ) : (\n            <Text style={styles.result}>You Lost!</Text>\n          )}\n          <Button title=\"Restart\" onPress={restartGame} />\n        </View>\n      ) : (\n        <View>\n          <Text style={styles.message}>{message}</Text>\n          <Text style={styles.remainingGuesses}>{`Remaining Guesses: ${7 - attempts}`}</Text>\n          <TextInput\n            style={inputStyle}\n            placeholder=\"Enter a number between 1 and 100\"\n            value={guess}\n            onChangeText={setGuess}\n            keyboardType=\"numeric\"\n            editable={!gameOver}\n          />\n          <Button title=\"Guess\" onPress={handleGuess} disabled={gameOver} />\n        </View>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20,\n  },\n  input: {\n    width: '100%',\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: 20,\n    paddingHorizontal: 10,\n  },\n  message: {\n    fontSize: 16,\n    marginBottom: 20,\n  },\n  remainingGuesses: {\n    fontSize: 16,\n    marginBottom: 10,\n  },\n  result: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 20,\n  },\n});\n\nexport default GuessNumber;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}