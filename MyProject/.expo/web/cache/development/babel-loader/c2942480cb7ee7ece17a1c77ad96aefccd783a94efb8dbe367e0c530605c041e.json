{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState, useEffect } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport axios from 'axios';\nimport open_api_key from \"./open\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar AskGPT = function AskGPT() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    data = _useState2[0],\n    setData = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    promptText = _useState4[0],\n    setPromptText = _useState4[1];\n  var _useState5 = useState('What is three times five?'),\n    _useState6 = _slicedToArray(_useState5, 2),\n    prompt = _useState6[0],\n    setPrompt = _useState6[1];\n  var _useState7 = useState(true),\n    _useState8 = _slicedToArray(_useState7, 2),\n    loading = _useState8[0],\n    setLoading = _useState8[1];\n  var getResponse = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var url = 'https://api.openai.com/v1/chat/completions';\n        var config = {\n          headers: {\n            Accept: 'application/json, text/plain, */*',\n            'Content-Type': 'application/json',\n            Authorization: 'Bearer ' + open_api_key\n          }\n        };\n        var msg_data = {\n          model: 'gpt-3.5-turbo',\n          messages: [{\n            role: 'user',\n            content: prompt\n          }],\n          temperature: 0.7\n        };\n        var response = yield axios.post(url, msg_data, config);\n        var result = response.data;\n        setLoading(false);\n        setData(result);\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function getResponse() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    getResponse();\n  }, [prompt]);\n  var ChatResponse = function ChatResponse(_ref2) {\n    var role = _ref2.role,\n      content = _ref2.content;\n    return _jsxs(View, {\n      style: {\n        backgroundColor: 'lightblue',\n        margin: 10,\n        padding: 20\n      },\n      children: [_jsx(Text, {\n        children: \"ChatGPT Response to the prompt is:\"\n      }), _jsx(Text, {\n        style: {\n          backgroundColor: 'white'\n        },\n        children: content\n      })]\n    });\n  };\n  return _jsxs(SafeAreaView, {\n    style: {\n      flex: 1,\n      fontSize: 24,\n      margin: 30\n    },\n    children: [_jsx(Text, {\n      children: \"API Demo\"\n    }), _jsx(Text, {\n      style: {\n        marginTop: 30\n      },\n      children: \"Prompt: \"\n    }), _jsx(TextInput, {\n      style: {\n        height: 40,\n        borderColor: 'gray',\n        borderWidth: 1,\n        padding: 10,\n        margin: 10\n      },\n      onChangeText: function onChangeText(text) {\n        return setPromptText(text);\n      },\n      value: promptText\n    }), _jsx(Button, {\n      onPress: function onPress() {\n        setLoading(true);\n        setData([]);\n        setPrompt(promptText);\n      },\n      title: loading ? 'Awaiting Response' : 'Ask GPT',\n      color: \"#841584\",\n      accessibilityLabel: \"Send\"\n    }), _jsx(FlatList, {\n      data: data.choices,\n      keyExtractor: function keyExtractor(_, index) {\n        return index.toString();\n      },\n      renderItem: function renderItem(_ref3) {\n        var item = _ref3.item;\n        return _jsx(ChatResponse, _objectSpread({}, item.message));\n      }\n    })]\n  });\n};\nexport default AskGPT;","map":{"version":3,"names":["React","useState","useEffect","SafeAreaView","Text","TextInput","Button","FlatList","View","axios","open_api_key","jsx","_jsx","jsxs","_jsxs","AskGPT","_useState","_useState2","_slicedToArray","data","setData","_useState3","_useState4","promptText","setPromptText","_useState5","_useState6","prompt","setPrompt","_useState7","_useState8","loading","setLoading","getResponse","_ref","_asyncToGenerator","url","config","headers","Accept","Authorization","msg_data","model","messages","role","content","temperature","response","post","result","error","console","apply","arguments","ChatResponse","_ref2","style","backgroundColor","margin","padding","children","flex","fontSize","marginTop","height","borderColor","borderWidth","onChangeText","text","value","onPress","title","color","accessibilityLabel","choices","keyExtractor","_","index","toString","renderItem","_ref3","item","_objectSpread","message"],"sources":["/Users/zhangxinyi/Desktop/My Home/code/MyProject/components/AskGPT.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { SafeAreaView, Text, TextInput, Button, FlatList, View } from 'react-native';\nimport axios from 'axios';\nimport open_api_key from './open';\n\nconst AskGPT = () => {\n  const [data, setData] = useState([]);\n  const [promptText, setPromptText] = useState('');\n  const [prompt, setPrompt] = useState('What is three times five?');\n  const [loading, setLoading] = useState(true);\n\n  const getResponse = async () => {\n    try {\n      const url = 'https://api.openai.com/v1/chat/completions';\n      const config = {\n        headers: {\n          Accept: 'application/json, text/plain, */*',\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + open_api_key,\n        },\n      };\n      const msg_data = {\n        model: 'gpt-3.5-turbo',\n        messages: [{ role: 'user', content: prompt }],\n        temperature: 0.7,\n      };\n      const response = await axios.post(url, msg_data, config);\n      const result = response.data;\n      setLoading(false);\n      setData(result);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    getResponse();\n  }, [prompt]);\n\n  const ChatResponse = ({ role, content }) => (\n    <View style={{ backgroundColor: 'lightblue', margin: 10, padding: 20 }}>\n      <Text>ChatGPT Response to the prompt is:</Text>\n      <Text style={{ backgroundColor: 'white' }}>{content}</Text>\n    </View>\n  );\n\n  return (\n    <SafeAreaView style={{ flex: 1, fontSize: 24, margin: 30 }}>\n      <Text>API Demo</Text>\n      <Text style={{ marginTop: 30 }}>Prompt: </Text>\n      <TextInput\n        style={{ height: 40, borderColor: 'gray', borderWidth: 1, padding: 10, margin: 10 }}\n        onChangeText={text => setPromptText(text)}\n        value={promptText}\n      />\n\n      <Button\n        onPress={() => {\n          setLoading(true);\n          setData([]);\n          setPrompt(promptText);\n        }}\n        title={loading ? 'Awaiting Response' : 'Ask GPT'}\n        color=\"#841584\"\n        accessibilityLabel=\"Send\"\n      />\n\n      <FlatList\n        data={data.choices}\n        keyExtractor={(_, index) => index.toString()}\n        renderItem={({ item }) => <ChatResponse {...item.message} />}\n      />\n    </SafeAreaView>\n  );\n};\n\nexport default AskGPT;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}