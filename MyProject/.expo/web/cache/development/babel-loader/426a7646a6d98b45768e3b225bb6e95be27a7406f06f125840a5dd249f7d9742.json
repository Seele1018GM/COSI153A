{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { Notifications } from 'expo';\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar AlarmClock = function AlarmClock() {\n  var _useState = useState(new Date()),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedTime = _useState2[0],\n    setSelectedTime = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    showTimePicker = _useState4[0],\n    setShowTimePicker = _useState4[1];\n  useEffect(function () {\n    registerForPushNotificationsAsync();\n    Notifications.addNotificationReceivedListener(handleNotificationReceived);\n  }, []);\n  var handleNotificationReceived = function handleNotificationReceived(notification) {\n    console.log('Notification received:', notification);\n  };\n  var registerForPushNotificationsAsync = function () {\n    var _ref = _asyncToGenerator(function* () {\n      var _yield$Notifications$ = yield Notifications.getPermissionsAsync(),\n        existingStatus = _yield$Notifications$.status;\n      var finalStatus = existingStatus;\n      if (existingStatus !== 'granted') {\n        var _yield$Notifications$2 = yield Notifications.requestPermissionsAsync(),\n          status = _yield$Notifications$2.status;\n        finalStatus = status;\n      }\n      if (finalStatus !== 'granted') {\n        console.log('Failed to get push token for push notifications!');\n        return;\n      }\n    });\n    return function registerForPushNotificationsAsync() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var handleTimeChange = function handleTimeChange(event, time) {\n    if (time) {\n      setSelectedTime(time);\n      setShowTimePicker(false);\n      scheduleNotification(time);\n    }\n  };\n  var scheduleNotification = function () {\n    var _ref2 = _asyncToGenerator(function* (time) {\n      var trigger = new Date(time);\n      yield Notifications.scheduleNotificationAsync({\n        content: {\n          title: 'Alarm',\n          body: 'Wake up!'\n        },\n        trigger: trigger\n      });\n      console.log('Notification scheduled');\n    });\n    return function scheduleNotification(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var showPicker = function showPicker() {\n    setShowTimePicker(true);\n  };\n  return _jsxs(View, {\n    children: [_jsx(Button, {\n      title: \"Set Alarm\",\n      onPress: showPicker\n    }), showTimePicker && _jsx(DateTimePicker, {\n      value: selectedTime,\n      mode: \"time\",\n      display: Platform.OS === 'ios' ? 'spinner' : 'default',\n      onChange: handleTimeChange\n    })]\n  });\n};\nexport default AlarmClock;","map":{"version":3,"names":["React","useState","useEffect","View","Button","Platform","Notifications","DateTimePicker","jsx","_jsx","jsxs","_jsxs","AlarmClock","_useState","Date","_useState2","_slicedToArray","selectedTime","setSelectedTime","_useState3","_useState4","showTimePicker","setShowTimePicker","registerForPushNotificationsAsync","addNotificationReceivedListener","handleNotificationReceived","notification","console","log","_ref","_asyncToGenerator","_yield$Notifications$","getPermissionsAsync","existingStatus","status","finalStatus","_yield$Notifications$2","requestPermissionsAsync","apply","arguments","handleTimeChange","event","time","scheduleNotification","_ref2","trigger","scheduleNotificationAsync","content","title","body","_x","showPicker","children","onPress","value","mode","display","OS","onChange"],"sources":["/Users/zhangxinyi/Desktop/My Home/code/MyProject/components/AlarmClock.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Button, Platform } from 'react-native';\nimport { Notifications } from 'expo';\nimport DateTimePicker from '@react-native-community/datetimepicker';\n\nconst AlarmClock = () => {\n  const [selectedTime, setSelectedTime] = useState(new Date());\n  const [showTimePicker, setShowTimePicker] = useState(false);\n\n  useEffect(() => {\n    registerForPushNotificationsAsync();\n    Notifications.addNotificationReceivedListener(handleNotificationReceived);\n  }, []);\n\n  const handleNotificationReceived = (notification) => {\n    console.log('Notification received:', notification);\n  };\n\n  const registerForPushNotificationsAsync = async () => {\n    const { status: existingStatus } = await Notifications.getPermissionsAsync();\n    let finalStatus = existingStatus;\n\n    if (existingStatus !== 'granted') {\n      const { status } = await Notifications.requestPermissionsAsync();\n      finalStatus = status;\n    }\n\n    if (finalStatus !== 'granted') {\n      console.log('Failed to get push token for push notifications!');\n      return;\n    }\n  };\n\n  const handleTimeChange = (event, time) => {\n    if (time) {\n      setSelectedTime(time);\n      setShowTimePicker(false);\n      scheduleNotification(time);\n    }\n  };\n\n  const scheduleNotification = async (time) => {\n    const trigger = new Date(time);\n\n    await Notifications.scheduleNotificationAsync({\n      content: {\n        title: 'Alarm',\n        body: 'Wake up!',\n      },\n      trigger,\n    });\n\n    console.log('Notification scheduled');\n  };\n\n  const showPicker = () => {\n    setShowTimePicker(true);\n  };\n\n  return (\n    <View>\n      <Button title=\"Set Alarm\" onPress={showPicker} />\n      {showTimePicker && (\n        <DateTimePicker\n          value={selectedTime}\n          mode=\"time\"\n          display={Platform.OS === 'ios' ? 'spinner' : 'default'}\n          onChange={handleTimeChange}\n        />\n      )}\n    </View>\n  );\n};\n\nexport default AlarmClock;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}