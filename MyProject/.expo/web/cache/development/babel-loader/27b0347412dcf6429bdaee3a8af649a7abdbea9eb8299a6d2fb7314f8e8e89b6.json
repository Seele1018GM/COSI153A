{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { DatePickerIOS } from \"react-native-web/dist/index\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar AlarmClock = function AlarmClock() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedTime = _useState2[0],\n    setSelectedTime = _useState2[1];\n  var handleTimeChange = function handleTimeChange(time) {\n    setSelectedTime(time);\n    scheduleNotification();\n  };\n  var scheduleNotification = function scheduleNotification() {\n    if (selectedTime) {\n      Alert.alert('Alarm set successfully!');\n    }\n  };\n  return _jsxs(View, {\n    children: [_jsx(DatePickerIOS, {\n      mode: \"time\",\n      onDateChange: handleTimeChange,\n      date: selectedTime\n    }), _jsx(Button, {\n      title: \"Set Alarm\",\n      onPress: scheduleNotification\n    })]\n  });\n};\nexport default AlarmClock;","map":{"version":3,"names":["React","useState","View","Button","DatePickerIOS","Alert","jsx","_jsx","jsxs","_jsxs","AlarmClock","_useState","_useState2","_slicedToArray","selectedTime","setSelectedTime","handleTimeChange","time","scheduleNotification","alert","children","mode","onDateChange","date","title","onPress"],"sources":["/Users/zhangxinyi/Desktop/My Home/code/MyProject/components/AlarmClock.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Button, DatePickerIOS, Alert } from 'react-native';\n\nconst AlarmClock = () => {\n  const [selectedTime, setSelectedTime] = useState(null);\n\n  const handleTimeChange = (time) => {\n    setSelectedTime(time);\n    scheduleNotification(); // Schedule the notification here\n  };\n\n  const scheduleNotification = () => {\n    if (selectedTime) {\n      // Schedule the notification at the selected time\n      // You can use a notification library or implement the logic based on your requirements\n      // For example, you can use the react-native-push-notification library\n      // Here's an example using the react-native-push-notification library:\n\n      // import PushNotification from 'react-native-push-notification';\n      // PushNotification.localNotificationSchedule({\n      //   message: 'Alarm!',\n      //   date: selectedTime,\n      // });\n\n      // Remember to install and configure the library according to its documentation\n      Alert.alert('Alarm set successfully!');\n    }\n  };\n\n  return (\n    <View>\n      <DatePickerIOS\n        mode=\"time\"\n        onDateChange={handleTimeChange}\n        date={selectedTime}\n      />\n      <Button title=\"Set Alarm\" onPress={scheduleNotification} />\n    </View>\n  );\n};\n\nexport default AlarmClock;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAAA,SACjBC,aAAa;AAAA,OAAAC,KAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEpC,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAS;EACvB,IAAAC,SAAA,GAAwCV,QAAQ,CAAC,IAAI,CAAC;IAAAW,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA/CG,YAAY,GAAAF,UAAA;IAAEG,eAAe,GAAAH,UAAA;EAEpC,IAAMI,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIC,IAAI,EAAK;IACjCF,eAAe,CAACE,IAAI,CAAC;IACrBC,oBAAoB,CAAC,CAAC;EACxB,CAAC;EAED,IAAMA,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAA,EAAS;IACjC,IAAIJ,YAAY,EAAE;MAahBT,KAAK,CAACc,KAAK,CAAC,yBAAyB,CAAC;IACxC;EACF,CAAC;EAED,OACEV,KAAA,CAACP,IAAI;IAAAkB,QAAA,GACHb,IAAA,CAACH,aAAa;MACZiB,IAAI,EAAC,MAAM;MACXC,YAAY,EAAEN,gBAAiB;MAC/BO,IAAI,EAAET;IAAa,CACpB,CAAC,EACFP,IAAA,CAACJ,MAAM;MAACqB,KAAK,EAAC,WAAW;MAACC,OAAO,EAAEP;IAAqB,CAAE,CAAC;EAAA,CACvD,CAAC;AAEX,CAAC;AAED,eAAeR,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}