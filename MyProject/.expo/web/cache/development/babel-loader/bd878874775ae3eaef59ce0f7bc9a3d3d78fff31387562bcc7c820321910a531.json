{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar GuessNumber = function GuessNumber() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    guess = _useState2[0],\n    setGuess = _useState2[1];\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    attempts = _useState4[0],\n    setAttempts = _useState4[1];\n  var _useState5 = useState(Math.floor(Math.random() * 100) + 1),\n    _useState6 = _slicedToArray(_useState5, 1),\n    answer = _useState6[0];\n  var handleGuess = function handleGuess() {\n    var parsedGuess = parseInt(guess);\n    if (isNaN(parsedGuess) || parsedGuess < 1 || parsedGuess > 100) {\n      Alert.alert('Invalid guess', 'Please enter a number between 1 and 100.', [{\n        text: 'OK'\n      }]);\n      return;\n    }\n    setAttempts(attempts + 1);\n    if (parsedGuess === answer) {\n      Alert.alert('Congratulations!', \"You guessed the number in \" + attempts + \" attempts.\", [{\n        text: 'OK',\n        onPress: resetGame\n      }]);\n      return;\n    }\n    if (parsedGuess < answer) {\n      Alert.alert('Too Small', 'Try guessing a larger number.', [{\n        text: 'OK'\n      }]);\n    } else {\n      Alert.alert('Too Large', 'Try guessing a smaller number.', [{\n        text: 'OK'\n      }]);\n    }\n    setGuess('');\n  };\n  var resetGame = function resetGame() {\n    setGuess('');\n    setAttempts(0);\n    setAnswer(Math.floor(Math.random() * 100) + 1);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Guess the Number\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Enter a number between 1 and 100\",\n      value: guess,\n      onChangeText: setGuess,\n      keyboardType: \"numeric\"\n    }), _jsx(Button, {\n      title: \"Guess\",\n      onPress: handleGuess\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20\n  },\n  input: {\n    width: '80%',\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: 20,\n    paddingHorizontal: 10\n  }\n});\nexport default GuessNumber;","map":{"version":3,"names":["React","useState","StyleSheet","View","Text","TextInput","Button","Alert","jsx","_jsx","jsxs","_jsxs","GuessNumber","_useState","_useState2","_slicedToArray","guess","setGuess","_useState3","_useState4","attempts","setAttempts","_useState5","Math","floor","random","_useState6","answer","handleGuess","parsedGuess","parseInt","isNaN","alert","text","onPress","resetGame","setAnswer","style","styles","container","children","title","input","placeholder","value","onChangeText","keyboardType","create","flex","alignItems","justifyContent","padding","fontSize","fontWeight","marginBottom","width","height","borderColor","borderWidth","paddingHorizontal"],"sources":["/Users/zhangxinyi/Desktop/My Home/code/AwesomeProject/components/GuessNumber.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { StyleSheet, View, Text, TextInput, Button, Alert } from 'react-native';\n\nconst GuessNumber = () => {\n  const [guess, setGuess] = useState('');\n  const [attempts, setAttempts] = useState(0);\n  const [answer] = useState(Math.floor(Math.random() * 100) + 1);\n\n  const handleGuess = () => {\n    const parsedGuess = parseInt(guess);\n    if (isNaN(parsedGuess) || parsedGuess < 1 || parsedGuess > 100) {\n      Alert.alert('Invalid guess', 'Please enter a number between 1 and 100.', [\n        { text: 'OK' },\n      ]);\n      return;\n    }\n\n    setAttempts(attempts + 1);\n\n    if (parsedGuess === answer) {\n      Alert.alert(\n        'Congratulations!',\n        `You guessed the number in ${attempts} attempts.`,\n        [{ text: 'OK', onPress: resetGame }]\n      );\n      return;\n    }\n\n    if (parsedGuess < answer) {\n      Alert.alert('Too Small', 'Try guessing a larger number.', [{ text: 'OK' }]);\n    } else {\n      Alert.alert('Too Large', 'Try guessing a smaller number.', [{ text: 'OK' }]);\n    }\n    setGuess('');\n  };\n\n  const resetGame = () => {\n    setGuess('');\n    setAttempts(0);\n    setAnswer(Math.floor(Math.random() * 100) + 1);\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Guess the Number</Text>\n      <TextInput\n        style={styles.input}\n        placeholder=\"Enter a number between 1 and 100\"\n        value={guess}\n        onChangeText={setGuess}\n        keyboardType=\"numeric\"\n      />\n      <Button title=\"Guess\" onPress={handleGuess} />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20,\n  },\n  input: {\n    width: '80%',\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: 20,\n    paddingHorizontal: 10,\n  },\n});\n\nexport default GuessNumber;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}