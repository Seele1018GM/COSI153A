{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar AlarmClock = function AlarmClock() {\n  var _useState = useState(new Date()),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedTime = _useState2[0],\n    setSelectedTime = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    showTimePicker = _useState4[0],\n    setShowTimePicker = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    alarms = _useState6[0],\n    setAlarms = _useState6[1];\n  var handleTimeChange = function handleTimeChange(event, time) {\n    if (time) {\n      setSelectedTime(time);\n      setShowTimePicker(false);\n      scheduleNotification(time);\n    }\n  };\n  var scheduleNotification = function scheduleNotification(time) {\n    var newAlarm = {\n      id: Date.now(),\n      time: time\n    };\n    setAlarms([].concat(_toConsumableArray(alarms), [newAlarm]));\n    console.log('Notification scheduled');\n  };\n  var deleteAlarm = function deleteAlarm(id) {\n    var updatedAlarms = alarms.filter(function (alarm) {\n      return alarm.id !== id;\n    });\n    setAlarms(updatedAlarms);\n  };\n  var renderAlarm = function renderAlarm(_ref) {\n    var item = _ref.item;\n    return _jsxs(View, {\n      style: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginVertical: 10\n      },\n      children: [_jsx(Text, {\n        style: {\n          flex: 1\n        },\n        children: item.time.toLocaleTimeString()\n      }), _jsx(Button, {\n        title: \"Delete\",\n        onPress: function onPress() {\n          return deleteAlarm(item.id);\n        }\n      })]\n    });\n  };\n  var showPicker = function showPicker() {\n    setShowTimePicker(true);\n  };\n  return _jsxs(View, {\n    style: {\n      flex: 1\n    },\n    children: [_jsx(Button, {\n      title: \"Set Alarm\",\n      onPress: showPicker\n    }), showTimePicker && _jsx(DateTimePicker, {\n      value: selectedTime,\n      mode: \"time\",\n      display: Platform.OS === 'ios' ? 'spinner' : 'default',\n      onChange: handleTimeChange\n    }), _jsx(FlatList, {\n      data: alarms.sort(function (a, b) {\n        return a.time - b.time;\n      }),\n      keyExtractor: function keyExtractor(item) {\n        return item.id.toString();\n      },\n      renderItem: renderAlarm\n    })]\n  });\n};\nexport default AlarmClock;","map":{"version":3,"names":["React","useState","View","Button","Platform","FlatList","Text","DateTimePicker","jsx","_jsx","jsxs","_jsxs","AlarmClock","_useState","Date","_useState2","_slicedToArray","selectedTime","setSelectedTime","_useState3","_useState4","showTimePicker","setShowTimePicker","_useState5","_useState6","alarms","setAlarms","handleTimeChange","event","time","scheduleNotification","newAlarm","id","now","concat","_toConsumableArray","console","log","deleteAlarm","updatedAlarms","filter","alarm","renderAlarm","_ref","item","style","flexDirection","alignItems","marginVertical","children","flex","toLocaleTimeString","title","onPress","showPicker","value","mode","display","OS","onChange","data","sort","a","b","keyExtractor","toString","renderItem"],"sources":["/Users/zhangxinyi/Desktop/My Home/code/MyProject/components/AlarmClock.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Button, Platform, FlatList, Text } from 'react-native';\nimport DateTimePicker from '@react-native-community/datetimepicker';\n\nconst AlarmClock = () => {\n  const [selectedTime, setSelectedTime] = useState(new Date());\n  const [showTimePicker, setShowTimePicker] = useState(false);\n  const [alarms, setAlarms] = useState([]);\n\n  const handleTimeChange = (event, time) => {\n    if (time) {\n      setSelectedTime(time);\n      setShowTimePicker(false);\n      scheduleNotification(time);\n    }\n  };\n\n  const scheduleNotification = (time) => {\n    const newAlarm = { id: Date.now(), time };\n    setAlarms([...alarms, newAlarm]);\n    console.log('Notification scheduled');\n  };\n\n  const deleteAlarm = (id) => {\n    const updatedAlarms = alarms.filter((alarm) => alarm.id !== id);\n    setAlarms(updatedAlarms);\n  };\n\n  const renderAlarm = ({ item }) => (\n    <View style={{ flexDirection: 'row', alignItems: 'center', marginVertical: 10 }}>\n      <Text style={{ flex: 1 }}>{item.time.toLocaleTimeString()}</Text>\n      <Button title=\"Delete\" onPress={() => deleteAlarm(item.id)} />\n    </View>\n  );\n\n  const showPicker = () => {\n    setShowTimePicker(true);\n  };\n\n  return (\n    <View style={{ flex: 1 }}>\n      <Button title=\"Set Alarm\" onPress={showPicker} />\n      {showTimePicker && (\n        <DateTimePicker\n          value={selectedTime}\n          mode=\"time\"\n          display={Platform.OS === 'ios' ? 'spinner' : 'default'}\n          onChange={handleTimeChange}\n        />\n      )}\n      <FlatList\n        data={alarms.sort((a, b) => a.time - b.time)}\n        keyExtractor={(item) => item.id.toString()}\n        renderItem={renderAlarm}\n      />\n    </View>\n  );\n};\n\nexport default AlarmClock;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}