{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar DateTimePickerModal = function DateTimePickerModal(_ref) {\n  var visible = _ref.visible,\n    date = _ref.date,\n    onConfirm = _ref.onConfirm,\n    onCancel = _ref.onCancel;\n  var handleConfirm = function handleConfirm() {\n    onConfirm(date);\n  };\n  var handleCancel = function handleCancel() {\n    onCancel();\n  };\n  return _jsx(View, {\n    children: visible && _jsxs(View, {\n      children: [_jsx(DateTimePicker, {\n        value: date,\n        mode: \"time\",\n        display: Platform.OS === 'ios' ? 'spinner' : 'default',\n        onChange: function onChange(_, selected) {\n          return onConfirm(selected);\n        }\n      }), _jsx(Button, {\n        title: \"Confirm\",\n        onPress: handleConfirm\n      }), _jsx(Button, {\n        title: \"Cancel\",\n        onPress: handleCancel\n      })]\n    })\n  });\n};\nvar AlarmClock = function AlarmClock() {\n  var _useState = useState(new Date()),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedTime = _useState2[0],\n    setSelectedTime = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isPickerVisible = _useState4[0],\n    setPickerVisible = _useState4[1];\n  var handleTimeChange = function handleTimeChange(selected) {\n    setSelectedTime(selected);\n  };\n  var handleSave = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        yield AsyncStorage.setItem('alarmTime', selectedTime.toISOString());\n        console.log('Alarm time saved:', selectedTime);\n      } catch (error) {\n        console.log('Error saving alarm time:', error);\n      }\n    });\n    return function handleSave() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var showPicker = function showPicker() {\n    setPickerVisible(true);\n  };\n  var hidePicker = function hidePicker() {\n    setPickerVisible(false);\n  };\n  return _jsxs(View, {\n    children: [_jsx(Button, {\n      title: \"Select Time\",\n      onPress: showPicker\n    }), _jsx(DateTimePickerModal, {\n      visible: isPickerVisible,\n      date: selectedTime,\n      onConfirm: handleTimeChange,\n      onCancel: hidePicker\n    }), _jsx(Button, {\n      title: \"Save\",\n      onPress: handleSave\n    })]\n  });\n};\nexport default AlarmClock;","map":{"version":3,"names":["React","useState","View","Button","Platform","Text","DateTimePicker","AsyncStorage","jsx","_jsx","jsxs","_jsxs","DateTimePickerModal","_ref","visible","date","onConfirm","onCancel","handleConfirm","handleCancel","children","value","mode","display","OS","onChange","_","selected","title","onPress","AlarmClock","_useState","Date","_useState2","_slicedToArray","selectedTime","setSelectedTime","_useState3","_useState4","isPickerVisible","setPickerVisible","handleTimeChange","handleSave","_ref2","_asyncToGenerator","setItem","toISOString","console","log","error","apply","arguments","showPicker","hidePicker"],"sources":["/Users/zhangxinyi/Desktop/My Home/code/MyProject/components/AlarmClock.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Button, Platform, Text } from 'react-native';\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst DateTimePickerModal = ({ visible, date, onConfirm, onCancel }) => {\n  const handleConfirm = () => {\n    onConfirm(date);\n  };\n\n  const handleCancel = () => {\n    onCancel();\n  };\n\n  return (\n    <View>\n      {visible && (\n        <View>\n          <DateTimePicker\n            value={date}\n            mode=\"time\"\n            display={Platform.OS === 'ios' ? 'spinner' : 'default'}\n            onChange={(_, selected) => onConfirm(selected)}\n          />\n          <Button title=\"Confirm\" onPress={handleConfirm} />\n          <Button title=\"Cancel\" onPress={handleCancel} />\n        </View>\n      )}\n    </View>\n  );\n};\n\nconst AlarmClock = () => {\n  const [selectedTime, setSelectedTime] = useState(new Date());\n  const [isPickerVisible, setPickerVisible] = useState(false);\n\n  const handleTimeChange = (selected) => {\n    setSelectedTime(selected);\n  };\n\n  const handleSave = async () => {\n    try {\n      await AsyncStorage.setItem('alarmTime', selectedTime.toISOString());\n      console.log('Alarm time saved:', selectedTime);\n    } catch (error) {\n      console.log('Error saving alarm time:', error);\n    }\n  };\n\n  const showPicker = () => {\n    setPickerVisible(true);\n  };\n\n  const hidePicker = () => {\n    setPickerVisible(false);\n  };\n\n  return (\n    <View>\n      <Button title=\"Select Time\" onPress={showPicker} />\n\n      <DateTimePickerModal\n        visible={isPickerVisible}\n        date={selectedTime}\n        onConfirm={handleTimeChange}\n        onCancel={hidePicker}\n      />\n\n      <Button title=\"Save\" onPress={handleSave} />\n    </View>\n  );\n};\n\nexport default AlarmClock;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}